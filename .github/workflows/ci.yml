name: Spring Boot CI Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      
     - name: Checkout repository
       uses: actions/checkout@v3
    
     - name: Set up JDK 17
       uses: actions/setup-java@v3
       with:
          java-version: '17'
          distribution: 'temurin'

     - name: Cache Maven packages
       uses: actions/cache@v3
       with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

     - name: Build with Maven
       run: mvn clean install -DskipTests

     - name: Run Tests
       run: mvn test

     - name: Prepare release artifact
       run:  mvn clean package -DskipTests
        
     - name: Upload artifact
       uses: actions/upload-artifact@v4
       with:
        name: release
        path: target/*.jar
    
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build   # Ensure deploy runs only if build is successful

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: release
          path: ./artifact

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Upload artifact to server and deploy
        run: |
          scp ./artifact/*.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/tmp/*.jar
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            mkdir -p ~/deploy/releases
            mv /tmp/*.jar ~/deploy/releases
            rm /tmp/*.jar
          EOF